# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'main_window.ui'
#
# Created by: PyQt5 UI code generator 5.15.6
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(799, 600)
        MainWindow.setAcceptDrops(True)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setObjectName("gridLayout")
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 799, 26))
        self.menubar.setObjectName("menubar")
        self.menu_file = QtWidgets.QMenu(self.menubar)
        self.menu_file.setFocusPolicy(QtCore.Qt.NoFocus)
        self.menu_file.setToolTip("")
        self.menu_file.setStatusTip("")
        self.menu_file.setObjectName("menu_file")
        self.menu_edit = QtWidgets.QMenu(self.menubar)
        self.menu_edit.setObjectName("menu_edit")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.action_new = QtWidgets.QAction(MainWindow)
        self.action_new.setObjectName("action_new")
        self.action_open = QtWidgets.QAction(MainWindow)
        self.action_open.setObjectName("action_open")
        self.action_attribute = QtWidgets.QAction(MainWindow)
        self.action_attribute.setObjectName("action_attribute")
        self.action_exit = QtWidgets.QAction(MainWindow)
        self.action_exit.setObjectName("action_exit")
        self.action_export = QtWidgets.QAction(MainWindow)
        self.action_export.setObjectName("action_export")
        self.action_save = QtWidgets.QAction(MainWindow)
        self.action_save.setObjectName("action_save")
        self.menu_file.addAction(self.action_new)
        self.menu_file.addAction(self.action_open)
        self.menu_file.addAction(self.action_save)
        self.menu_file.addAction(self.action_export)
        self.menu_file.addAction(self.action_attribute)
        self.menu_file.addAction(self.action_exit)
        self.menubar.addAction(self.menu_file.menuAction())
        self.menubar.addAction(self.menu_edit.menuAction())

        self.retranslateUi(MainWindow)
        self.action_exit.triggered.connect(MainWindow.close) # type: ignore
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "CipherManagerGUI"))
        self.menu_file.setTitle(_translate("MainWindow", "文件"))
        self.menu_edit.setTitle(_translate("MainWindow", "编辑"))
        self.action_new.setText(_translate("MainWindow", "新建"))
        self.action_new.setStatusTip(_translate("MainWindow", "新建"))
        self.action_new.setShortcut(_translate("MainWindow", "N"))
        self.action_open.setText(_translate("MainWindow", "打开"))
        self.action_open.setStatusTip(_translate("MainWindow", "打开"))
        self.action_open.setShortcut(_translate("MainWindow", "O"))
        self.action_attribute.setText(_translate("MainWindow", "属性"))
        self.action_attribute.setStatusTip(_translate("MainWindow", "属性"))
        self.action_attribute.setShortcut(_translate("MainWindow", "A"))
        self.action_exit.setText(_translate("MainWindow", "退出"))
        self.action_exit.setStatusTip(_translate("MainWindow", "退出"))
        self.action_exit.setShortcut(_translate("MainWindow", "X"))
        self.action_export.setText(_translate("MainWindow", "导出"))
        self.action_export.setStatusTip(_translate("MainWindow", "导出"))
        self.action_export.setShortcut(_translate("MainWindow", "E"))
        self.action_save.setText(_translate("MainWindow", "保存"))
        self.action_save.setStatusTip(_translate("MainWindow", "保存"))
        self.action_save.setShortcut(_translate("MainWindow", "Ctrl+S"))
